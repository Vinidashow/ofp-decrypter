name: OFP Decrypter by Area69Labs

on:
  workflow_dispatch:
    inputs:
      ofp_link: https://doc-10-8s-docs.googleusercontent.com/docs/securesc/4vcm0c5mjtamlrcg4vd0j7m2aje0n2kb/18dqekargg5s6spnfqe42uh00s7k1bar/1670126625000/04936275984745205147/04936275984745205147/1_ef6SSUELaXo2TPzOI2vpk5eSQgaqtmS?e=download&ax=AEKYgyTmAQInjh-FK4ad9Fe7kRqUtTLmVriNnjqQTaIcuWMPgxEGzta-dOCLurS5NkTk4N7pTalM9ncGwzxd2LJOwUiOGlxN5mGvi8e_7LLrlCY2tEtus0hurG40wcpNrSiXAmC2DjvaAgLAfoBubSgFjhUzQoxYaT23jV6McFFIO65G9QjL1St5lYlELVHmp2r19iCsbF3zHLZfkcf71vgTsgrUz9EdlhNAsMTxOGiMFJyeQKuTmjNvVSo-kneoQGI3aIbJtp0rktGb7Cx1UVQ8Wfof7OGcia8dFY5zbFGRXOe2hQuCw2rObi3ZwPsx2kGqhGMposTpdLIBGWgM86zkGiF0K-lsTthMc3e4gwnWYbFuO5rTXlvwJsKvCYYyCJOZmZh4khU9XDGfbqKguscxqZdb5ULFtIc2JftPqysaTpvmFO6kYSHHn0F8whls3rUx4_J9WmG-vOOzpGZP5SuqE6GQEmwqW4jb_7Bn3VK46o9K8fMHasB482gVJGGLQGlVlWDy93lbPVdJY_FxZ-zwdlmgj6gJqg5cvTUf7ifyVu24F0XTy0zHt_seSllSdxKrWJD8ay93SkT3Iwy80bbEu5qB2gwCSbYDH-Oc53KlJMpoQWoS79BrIsHlB71ZtQ9zkwJkX3NtISLnCrSJ63vGR3vKaN5eL2Pue-bMIA9pmWYp9U_KeLAoso2k8DImzgGxIhGvAQ7jrjz3DFJTOS4Y19BMBjDKVTEZxEJ0ce2EWC7G7piSAzBNelDCP2WqM4vIB8tofXscBblL_TJfKm8N1CI1dU01lnUcyNhC1B9ukKOKHOv0HObHzdOpX7NZKqdg8FG9SvMa7U_fFfdVups-KncEdAFVmxwjwbwRMXBVnV8zius7f8Qlsjmm6qypR1Y-lgOesmo8-o8y4oIzlR63zelMyVzZ5t7v29I3eLmIE_yjIfF_13BLrLiZboyQQrabNXj9Ong2&uuid=715bacda-dda1-4cd9-b5f7-e4f492226115&authuser=2
        description: 'OFP Firmaware Link'
        required: true
      filename: RMX2155
        description: 'The filename You want in output (make unique)'
        required: true
      devicetype: MTK
        description: 'Specify Your Device type. { For Qualcomm (QC) FOR MEDIATEK (MTK) }'
        required: true
      simage:
        description: 'Do you want to merege super images, if yes then type <YES>'
        required: false
        default: 'YES'
      bigfile:
        description: 'Set to YES if your ofp file is more than 8GB. Setting to yes will take more time.'
        required: false
        default: 'NO'        

env:
  OFP_LINK: ${{ github.event.inputs.ofp_link }}
  FILENAME: ${{ github.event.inputs.filename }}
  DTYPE: ${{ github.event.inputs.devicetype }}
  SIMG: ${{ github.event.inputs.simage }}
  BFILE: ${{ github.event.inputs.bigfile }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: CleanUp Enviroment
        if: ${{ github.event.inputs.bigfile }} == 'YES'
        uses: rokibhasansagar/slimhub_actions@main

      - name: Download OFP Firmware
        run: |
          aria2c -c -s16 -x16 "$OFP_LINK" 2>/dev/null || wget -q --show-progress "$OFP_LINK"
          OFPFILE=${OFP_LINK##*/}
          echo "OFP_FILE=${OFPFILE}" >> ${GITHUB_ENV}
          OFPNAME=${OFPFILE%.*}
          echo "OFP_NAME=${OFPNAME}" >> ${GITHUB_ENV}

      - name: Prepare Decrypter and Decrypt OFP
        shell: bash
        run: |
          sudo apt-fast update -qqy
          sudo apt-fast install -qqy openssl rsync sshpass
          sudo pip3 install --upgrade pip wheel setuptools
          sudo pip3 install --upgrade pycryptodome
          sudo apt install simg2img
          git clone https://github.com/bkerler/oppo_decrypt.git --depth=1
          dtype=$DTYPE
          if [ $dtype == QC ]
          then
              printf "Trying to Decrypt QC OFP...\n"
              python3 ./oppo_decrypt/ofp_mtk_decrypt.py "$OFP_FILE" out 2>/dev/null

          elif [ $dtype == MTK ]
          then
              printf "Trying to Decrypt MTK OFP...\n"
              python3 ./oppo_decrypt/ofp_mtk_decrypt.py "$OFP_FILE" out 2>/dev/null

          else
              printf "Specify your Device Type...\n"
              printf "Cancelling Build\n"
          fi

      - name: Combine super images
        shell: bash
        run: |
          simg=$SIMG
          if [ $simg == YES ]
          then
              echo "Merging images"
              mkdir super
              cd out
              sed '2!d' super*.csv >> tmp.txt && sed -i "s/,/ /" tmp* && sed -i "s/,/ /" tmp* && sed -i "s/,/ /" tmp* && sed -i "s/,/ /" tmp* && egrep -o [a-zA-Z0-9.-]*super[a-zA-Z0-9.-]* tmp* >> supermap.sh && sed  -i "1s/^/first=/" supermap.sh && sed  -i "2s/^/second=/" supermap.sh && mkdir -p temp/retard && mkdir -p ../super && sed  -i "3s/^/third=/" supermap.sh && echo "cp \$first \$second \$third temp/retard/" >> supermap.sh && bash supermap.sh && cd temp/retard && sudo apt install simg2img && sudo apt-get install libz-dev && simg2img *super*.img super.img && mv ../../*super*.img ../../../super && mv super.img ../.. && rm -rf temp/retard
              cd ..
            
          elif [ $simg == NO ]
          then
              echo "Not merging images"
          fi

      - name: Compress Decrypted Zip
        shell: bash
        run: |
          zip -r9 Decrypted_"${FILENAME}".zip out/
          simg=$SIMG
          if [ $simg == YES ]
          then
              zip -r superimages.zip super/
              
          elif [ $simg == NO ]
          then
              echo "Not zipping superimages"
          fi         
    
      - name: Upload Decrypted Zip
        shell: bash
        run: |
          wget https://sauraj.rommirrorer.workers.dev/0:/rclonesetup.sh
          bash rclonesetup.sh
          rclone -P copy Decrypted_"${FILENAME}".zip rom:/decrypted_ofp/"${FILENAME}"_decrypt
          simg=$SIMG
          if [ $simg == YES ]
          then
              rclone -P copy superimages.zip rom:/decrypted_ofp/"${FILENAME}"_decrypt
              
          elif [ $simg == NO ]
          then
              echo "Not Uploading superimages"
          fi         
          
      - name: DOWNLOAD LINK
        run: |
          echo -e "zip LINK: https://sauraj.rommirrorer.workers.dev/0:/decrypted_ofp/${FILENAME}_decrypt"
          echo "Edited By Sauraj"
          
          
